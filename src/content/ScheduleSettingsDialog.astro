---
import ButtonPrimary from '../components/button/ButtonPrimary.astro';
import ButtonSecondary from '../components/button/ButtonSecondary.astro';
import Dialog from '../components/dialog/Dialog.astro';
import Input from '../components/Input.astro';
import { useTranslations, getLangFromUrl } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Dialog id="schedule-settings">
  <h2 class="mt-1 text-2xl font-bold sm:mt-0 sm:text-3xl dark:text-slate-200">
    {t('schedule.settings.title')}
  </h2>

  <hr class="-mx-5 mb-6 mt-4 sm:-mx-12 sm:mb-8 sm:mt-5 dark:border-slate-800" />
  <p class="mb-6 text-gray-500 dark:text-slate-300">
    {t('schedule.settings.description')}
  </p>
  <form id="schedule-form">
    <Input placeholder={t('schedule.settings.placeholder')} class="mb-4" id="schedule-input" />
    <ButtonPrimary id="schedule-button-accept" class="mb-2" type="submit"
      >{t('schedule.settings.accept')}</ButtonPrimary
    >
  </form>
  <ButtonSecondary id="schedule-button-decline" type="button"
    >{t('schedule.settings.decline')}</ButtonSecondary
  >

  <p class="mt-6 text-xs text-gray-500 dark:text-slate-400" set:html={
    t('schedule.settings.hint', {
      icon: `<span class="font-bold dark:text-slate-300">⚙️</span>`
    })
  }>
  </p>
</Dialog>

<script>
  const form = document.getElementById('schedule-form');
  const declineButton = document.getElementById('schedule-button-decline');
  const input = document.getElementById('schedule-input') as HTMLInputElement;
  const dialog = document.getElementById(
    'schedule-settings',
  ) as HTMLDialogElement;
  const scheduleCard = document.getElementById(
    'schedule-card',
  ) as HTMLAnchorElement;

  const storedScheduleName = localStorage.scheduleName;
  if (storedScheduleName) {
    input.value = storedScheduleName;
  }

  const onClick = (scheduleName: string) => {
    localStorage.scheduleName = scheduleName;

    const scheduleBaseUrl = scheduleCard.dataset.baseUrl as string;
    const newUrl = scheduleBaseUrl + scheduleName;

    scheduleCard.href = newUrl;
    dialog.close();

    // Small timeout to ensure that analytics event is captured
    // before following the link
    setTimeout(() => {
      window.location.href = newUrl;
    }, 100);
  };

  if (declineButton) {
    declineButton.addEventListener('click', () => {
      onClick('');
    });
  }

  if (input) {
    input.addEventListener('submit', (e) => {
      e.preventDefault();
      if (input.value) {
        input.setCustomValidity('');
      }
    });

    input.addEventListener('keyup', () => {
      if (input.value) {
        input.setCustomValidity('');
      }
    });
  }

  if (form) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      if (input.value) {
        onClick(input.value);
      } else {
        input.setCustomValidity('Fyll ut kalendernavn');
      }
    });
  }
</script>
